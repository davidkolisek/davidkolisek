$themeColor: $primary-color;
$backColor: #eee;
.main-circle-progress {
    display: flex;
    flex-direction: row;
    justify-content: center;
    padding: 16px;
    .circle-item {
        margin: 0 .5rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        .circle-label {
            font-size: .9rem;
        }
    }
  .progress--circle {
    position: relative;
    display: inline-block;
    margin: 10px;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: $themeColor;
    &:before {
      content: "";
      position: absolute;
      top: 4px;
      left: 4px;
      width: 42px;
      height: 42px;
      border-radius: 50%;
      background-color: #fff;
    }
    &:after {
      content: "";
      display: inline-block;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      background-color: $backColor;
    }
  }

  .progress__number {
    position: absolute;
    top: 50%;
    width: 100%;
    line-height: 1;
    margin-top: -0.4rem;
    text-align: center;
    font-size: .8rem;
    color: $secondary-font-color;
  }
}

/**
* $step is set to 5 by default, meaning you can only use percentage classes in increments of five (e.g. 25, 30, 45, 50, and so on). This helps to reduce the size of the final CSS file. If you need a number that doesn't end in 0 or 5, you can change the text percentage while rounding the class up/down to the nearest 5.
*/
$step: 5;
$loops: round(100 / $step);
$increment: 360 / $loops;
$half: round($loops / 2);
@for $i from 0 through $loops {
  .progress--bar.progress--#{$i * $step}:after {
    width: $i * $step * 1%;
  }
  .progress--circle.progress--#{$i * $step}:after {
    @if $i < $half {
      $nextDeg: 90deg + ($increment * $i);
      background-image: linear-gradient(
          90deg,
          $backColor 50%,
          transparent 50%,
          transparent
        ),
        linear-gradient($nextDeg, $themeColor 50%, $backColor 50%, $backColor);
    } @else {
      $nextDeg: -90deg + ($increment * ($i - $half));
      background-image: linear-gradient(
          $nextDeg,
          $themeColor 50%,
          transparent 50%,
          transparent
        ),
        linear-gradient(270deg, $themeColor 50%, $backColor 50%, $backColor);
    }
  }
}
